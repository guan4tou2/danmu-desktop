name: Build Electron App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd danmu-desktop
          npm install

      - name: Get version from package.json
        id: get_version
        shell: bash
        run: |
          set -e
          VERSION=$(node -p "require('./danmu-desktop/package.json').version")
          echo "version=$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build Electron App
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          cd danmu-desktop
          npm run pack-dist

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Electron-App-${{ matrix.os }}
          path: danmu-desktop/pack/**/*

      - name: Create GitHub Release
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          files: |
            danmu-desktop/pack/**/*danmu manager*-*.dmg
            danmu-desktop/pack/**/*danmu manager*-*.zip
            danmu-desktop/pack/**/*danmu manager*-*.exe
            danmu-desktop/pack/**/*danmu manager*-*.AppImage
            danmu-desktop/pack/**/*danmu manager*-*.deb
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
